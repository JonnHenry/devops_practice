version: '3.9'

services:
  postgres_db_prod:
    container_name: postgres_prod
    image: postgres:latest
    restart: always
    networks: 
      - env_prod
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty

  postgres_db_prep:
    container_name: postgres_prep
    image: postgres:latest
    restart: always
    networks: 
      - env_prep
    ports:
      - "4432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    networks: 
      - env_prod
      - env_prep
    depends_on:
      - postgres_db_prep
      - postgres_db_prod
    ports:
      - "9090:8080"
  
  billing_app_back_prod:
    build:
      context: ./java
      args:
        - JAR_FILE=billing-0.0.3-SNAPSHOT.jar
        - DB_PASSWORD=qwerty
    container_name: billing_app_back_prod
    environment:
      - JAVA_OPTS= 
        -Xms256M
        -Xmx256M
    depends_on:
      - postgres_db_prod
    networks: 
      - env_prod
    ports:
      - 8080:8080

  billing_app_back_prep:
    build:
      context: ./java
      args:
        - JAR_FILE=billing-0.0.2-SNAPSHOT.jar
        - DB_PASSWORD=qwerty
    container_name: billing_app_back_prep
    environment:
      - JAVA_OPTS= 
        -Xms256M
        -Xmx256M
    depends_on:
      - postgres_db_prep
    networks: 
      - env_prep
    ports:
      - 7080:7080

  billing_app_front_prod:
    build:
      context: ./angular
    container_name: billing_app_front_prod
    depends_on:
      - billing_app_back_prod
    networks: 
      - env_prod
    ports:
      - 80:80
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: 250M
        reservations:
          cpus: "0.1"
          memory: 128M

  billing_app_front_prep:
    build:
      context: ./angular
    container_name: billing_app_front_prep
    depends_on:
      - billing_app_back_prep
    networks: 
      - env_prep
    ports:
      - 81:81
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: 250M
        reservations:
          cpus: "0.1"
          memory: 128M

networks:
  env_prod:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
      config:
      -
        subnet: 172.16.232.0/24
        gateway: 172.16.232.1
      -
        subnet: "2001:3974:3979::/64"
        gateway: "2001:3974:3979::1"

  env_prep:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
      config:
      -
        subnet: 172.16.235.0/24
        gateway: 172.16.235.1
      -
        subnet: "2001:3984:3989::/64"
        gateway: "2001:3984:3989::1"
